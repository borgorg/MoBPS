dd[avg_yield>450,]
par(mfrow = c(1,1))
plot(0,0 , xlim = c(0, max(diff(start_lac))), ylim = c(0, max(milk[,7])))
start_lac = c(start_lac, nrow(milk) + 1)
low_performance = rep(NA, nrow(milk))
for(index in (1:(length(start_lac)-1))){
milk_day = (1:(start_lac[index+1]-start_lac[index]))
milk_yield = (milk[start_lac[index]:(start_lac[index+1]-1),7])
considered = intersect(11:(length(milk_day)*0.9), which(milk_yield>0 ))
milk_current = ksmooth(milk_day[considered], milk_yield[considered], bandwidth = 3,
x.points = considered)
milk_smooth = ksmooth(milk_day[considered], milk_yield[considered], bandwidth = 25,
x.points = considered)
#plot(milk_current, type = "l", lty = 2)
#lines(milk_smooth, col = 2)
#plot((milk_current$y - milk_smooth$y) / milk_current$y)
stress_event = ((milk_current$y - milk_smooth$y) / milk_current$y) < (-0.1)
#points(milk_current, col = stress_event*2)
print(mean(stress_event))
low_performance[start_lac[index]:(start_lac[index+1]-1)][considered] = stress_event
}
for(year1 in unique(milk_date[,1])){
png(file = paste0(year1, "_stress.png"), width = 2000, height = 3000, res = 300)
keep = (milk_date[,1]==year1) & !is.na(low_performance)
stress = ksmooth(milk_date[,2][keep], low_performance[keep],
bandwidth = 0.001,
x.points = 1:365)
stress2 = ksmooth(milk_date[,2][keep], low_performance[keep],
bandwidth = 5,
x.points = 1:365)
par(mfrow = c(2,1))
plot(stress, main = "Low Milk yield (daily)",
xlab = "day in year",
ylab = "share under stress")
lines(stress2, type = "l", main = "Low Milk yield (weekly)",
xlab = "day in year",
ylab = "share under stress",
col = 2, lwd=2)
plot(weather[weather[,17]==year1,10], main = "Weather Info", ylim = c(0,90),
xlab = "day in year", ylab = "")
points(weather[weather[,17]==year1,9],
col = "red")
points(weather[weather[,17]==year1,16],
col = "blue")
points(weather[weather[,17]==year1,6],
col = "darkgreen")
legend("topleft",
c("THI_max", "THI_avg", "THI_recovery", "Temp_max"),
col = c(1,"red", "blue", "darkgreen"),
lty = 1, lwd=2)
dev.off()
}
plot(avg_yield)
plot(n_record)
plot(n_record0)
plot(avg_yield)
plot(n_record)
plot(n_record0)
nrow(dd)
dd
dd = unique(milk_date)
avg_yield = numeric(nrow(dd))
n_record = numeric(nrow(dd))
n_record0 = numeric(nrow(dd))
for(index in 1:nrow(dd)){
print(index)
activ = milk[,2] == dd[index,1] & milk[,5] == dd[index,2]
avg_yield[index] = mean(milk[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk[activ,7]==0)
}
for(index in 1:nrow(dd)){
print(index)
#activ = milk[,2] == dd[index,1] & milk[,5] == dd[index,2]
avg_yield[index] = mean(milk[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk[activ,7]==0)
}
dd[index,1]
index
year_temp = dd[index,1]
milk_temp = milk[milk[,1]== year_temp,]
year_temp = dd[index,1]
milk_temp = milk[milk[,1]== year_temp,]
year_temp = dd[1,1]
milk_temp = milk[milk[,1]== year_temp,]
for(index in 1:nrow(dd)){
print(index)
if(dd[index,1] != year_temp){
year_temp = dd[index,1]
milk_temp = milk[milk[,1]== year_temp,]
}
activ = milk_temp[,2] == dd[index,1] & milk_temp[,5] == dd[index,2]
avg_yield[index] = mean(milk_temp[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk_temp[activ,7]==0)
}
plot(avg_yield)
plot(n_record)
plot(n_record0)
dd
year_temp = dd[1,1]
milk_temp = milk[milk[,1]== year_temp,]
milk_temp
milk[,1]
milk
year_temp = dd[1,1]
milk_temp = milk[milk[,2]== year_temp,]
milk_temp
for(index in 1:nrow(dd)){
print(index)
if(dd[index,1] != year_temp){
year_temp = dd[index,1]
milk_temp = milk[milk[,2]== year_temp,]
}
activ = milk_temp[,2] == dd[index,1] & milk_temp[,5] == dd[index,2]
avg_yield[index] = mean(milk_temp[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk_temp[activ,7]==0)
}
plot(avg_yield)
plot(n_record)
plot(n_record0)
plot(avg_yield)
year_temp = dd[1,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(1)
for(index in 1:nrow(dd)){
print(index)
if(dd[index,1] != year_temp){
year_temp = dd[index,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(year_thres, index)
}
activ = milk_temp[,2] == dd[index,1] & milk_temp[,5] == dd[index,2]
avg_yield[index] = mean(milk_temp[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk_temp[activ,7]==0)
}
abline(v = year_thres)
dd
milk_date
dd = dd[sort(dd[,1] * 1000 + dd[,2], index.return = TRUE)$ix,]
dd
avg_yield = numeric(nrow(dd))
n_record = numeric(nrow(dd))
n_record0 = numeric(nrow(dd))
year_temp = dd[1,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(1)
for(index in 1:nrow(dd)){
print(index)
if(dd[index,1] != year_temp){
year_temp = dd[index,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(year_thres, index)
}
activ = milk_temp[,2] == dd[index,1] & milk_temp[,5] == dd[index,2]
avg_yield[index] = mean(milk_temp[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk_temp[activ,7]==0)
}
plot(avg_yield)
plot(n_record)
plot(n_record0)
abline(v = year_thres)
plot(avg_yield)
plot(n_record)
plot(n_record0)
plot(n_record)
plot(n_record0)
abline(v = year_thres)
plot(n_record)
points(n_record0 * n_record, col = "red")
dd
dd[n_record0 > 0.1,]
test = function(a,b,thi){
thi = 75
print(thi)
}
test(1,2,80)
dd[n_record0 > 0.05,]
a = read.table(paste0("ams_",set,".csv"), sep =";")
set
set = 2
a = read.table(paste0("ams_",set,".csv"), sep =";")
animals = unique(a[,1])
time_data = NULL
for(index in 1997:2023){
s = index %in% c(1996,2000,2004,2008,2012,2016,2020)
year = rep(index, 365 + s)
month = c(rep(1,31),
rep(2,28 + s),
rep(3,31),
rep(4,30),
rep(5,31),
rep(6,30),
rep(7,31),
rep(8,31),
rep(9,30),
rep(10,31),
rep(11,30),
rep(12,31))
daym = c(1:31,
1:(28+s),
1:31,
1:30,
1:31,
1:30,
1:31,
1:31,
1:30,
1:31,
1:30,
1:31)
day = 1:(365 + s)
time_data = rbind(time_data, cbind(year, month, daym, day))
}
time_data = cbind(time_data, 1:nrow(time_data))
ams_per_animal = list()
ams_stats = list()
for(index2 in animals){
print(index2)
a_sub = a[a[,1] == index2,]
{
# remove anything that is in the data twice
codes1 = paste0(a_sub[,1],"_", a_sub[,3],"_", a_sub[,4],"_", a_sub[,5],"_", a_sub[,6])
a_sub = a_sub[!duplicated(codes1),]
#
candidate_remove = is.na(a_sub[,4]) | is.na(a_sub[,5])
codes2 = paste0(a_sub[,1],"_", a_sub[,3],"_", a_sub[,4],"_", a_sub[,6])
codes3 = paste0(a_sub[,1],"_", a_sub[,3],"_", a_sub[,5],"_", a_sub[,6])
is_copy = duplicated(c(codes2[!candidate_remove], codes3[!candidate_remove], codes2[candidate_remove], codes3[candidate_remove]))
recheck = duplicated(c(codes2[candidate_remove], codes3[candidate_remove]))
while(sum(recheck)>0){
if(sum(!candidate_remove)>0){
is_copy[-(1:(2*sum(!candidate_remove)))][recheck] =  duplicated(c(codes2[!candidate_remove], codes3[!candidate_remove],
c(codes2[candidate_remove], codes3[candidate_remove])[recheck]))[-(1:(2*sum(!candidate_remove)))]
} else{
is_copy[recheck] =  duplicated(c(codes2[!candidate_remove], codes3[!candidate_remove],
c(codes2[candidate_remove], codes3[candidate_remove])[recheck]))
}
recheck = duplicated(c(codes2[candidate_remove], codes3[candidate_remove])[recheck])
}
if(sum(!candidate_remove)>0){
code4 = is_copy[-(1:(2*sum(!candidate_remove)))]
} else{
code4 = is_copy
}
candidate_remove[candidate_remove] = code4[1:(length(code4)/2)] | code4[-(1:(length(code4)/2))]
a_sub = a_sub[!candidate_remove,]
# remove anything that
}
if(nrow(a_sub)<10){
next
}
redo = TRUE
while(redo){
year = as.numeric(substr(a_sub[,3], start=1, stop=4))
month = as.numeric(substr(a_sub[,3], start = 5, stop = 6))
daym = as.numeric(substr(a_sub[,3], start = 7, stop = 8))
day = daym + cumsum(c(0,31,28,31,30,31,30,31,31,30,31,30))[month] + (1 * year %in% c(1996,2000,2004,2008,2012,2016,2020) * month>=3)
overall = day + cumsum(rep(c(365,365,365,366), 10))[year - 1997]
diffs = diff(overall)
if(min(diffs) < 0){
redo = TRUE
a_sub = a_sub[sort(overall, decreasing = FALSE, index.return= TRUE)$ix,]
} else{
redo = FALSE
}
temp1 = c(which(diffs > 10))
if(sum(diff(temp1) < 10)>0){
for(index5 in sort(which(diff(temp1) < 10), decreasing = TRUE)){
a_sub = a_sub[-((temp1[index5]+1):temp1[index5 + 1]),, drop = FALSE]
}
redo = TRUE
}
}
temp = c(0,which(diffs > 10), nrow(a_sub))
n_lac = length(temp) - 1
lac_list = list()
lac_table = list()
lac_stats = list()
for(index in 1:n_lac){
lac_list[[index]] = (temp[index] + 1) : (temp[index + 1])
start = overall[lac_list[[index]][1]]
end = overall[lac_list[[index]][length(lac_list[[index]])]]
if(FALSE && (end - start) < 10){
print("short lactation removed")
next()
}
yield = numeric(end - start + 1)
a_sub_sub = a_sub[lac_list[[index]],]
activ_day = start
entry = 1
overall_sub = overall[lac_list[[index]]]
for(index3 in 1:nrow(a_sub_sub)){
while(overall_sub[index3] > activ_day){
activ_day = activ_day + 1
entry = entry + 1
}
yield[entry] = yield[entry] + a_sub_sub[index3,6]
#        if(entry == 82){print(a_sub_sub[index3,])}
}
first_time = which(time_data[,5] == start)
lac_table[[index]] = t(cbind(index2, time_data[first_time : (first_time + end - start),,drop=FALSE], yield, index, 1:length(yield)-1))
lac_stats[[index]] = cbind(index2, length(ams_per_animal)+ 1, index, end - start + 1, mean(yield!=0), mean(yield>600), mean(yield),
time_data[first_time,1],  time_data[first_time,2], time_data[first_time,3],
time_data[first_time + end - start,1], time_data[first_time + end - start,2], time_data[first_time + end - start,3])
}
ams_per_animal[[length(ams_per_animal) + 1]] = (lac_table)
ams_stats[[length(ams_stats) + 1]] = lac_stats
#print(" ###############")
#print(matrix(unlist(lac_stats), byrow = TRUE, ncol = 13))
#print(b[b[,1]==index2,])
}
setwd("C:/Users/pook001/OneDrive - Wageningen University & Research/data_re/")
weather = read.table("C:/Users/pook001/OneDrive - Wageningen University & Research/data_ines/weatherfeatures_30.txt", sep = ",", header = TRUE)
milk = NULL
#for(index in c(30,31,33,34,35,38,39,40,43,44,45,46,48)){
for(index in 2:100){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
#for(index in c(30,31,33,34,35,38,39,40,43,44,45,46,48)){
for(index in (1:100)[-c(1,11)]{
milk = NULL
#for(index in c(30,31,33,34,35,38,39,40,43,44,45,46,48)){
for(index in (1:100)[-c(1,11)]){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (24:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (37:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (45:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (46:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (56:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (60:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (74:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (76:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
for(index in (97:100)){
print(index)
milk = rbind(milk,as.matrix(read.table(paste0("ams_",index,"_clean.csv"), sep = " ", header = FALSE)))
}
milk = milk[milk[,2] > 2010,]
dim(milk)
dim(weather)
head(weather)
plot(as.numeric(weather[,5]))
weather = weather[as.numeric(substr(weather[,3], start=1, stop =4)) > 2010,]
year = as.numeric(substr(weather[,3], start=1, stop =4))
day = numeric(length(year))
activ_year = unique(year)
for(index in 1:length(activ_year)){
day[which(year == activ_year[index])] = 1:sum(year == activ_year[index])
}
for(par in 5:29){
par(mfrow = c(1,3))
plot(day, weather[,par], main= colnames(weather)[par])
plot(day[year > 2017], weather[year > 2017,par], ylim = c(min(weather[,par], na.rm = TRUE), max(weather[,par], na.rm = TRUE)))
mean(weather[year > 2017,5])
year_avg = numeric(length(activ_year))
for(index in 1:length(activ_year)){
year_avg[index] = mean(weather[year==activ_year[index],par])
}
plot(year_avg)
}
head(milk)
dim(milk)
plot(milk[1:1000,6])
start_lac = which(milk[,9]==0)
par(mfrow = c(1,1))
plot(0,0 , xlim = c(0, max(diff(start_lac))), ylim = c(0, max(milk[,7])))
for(index in (1:length(start_lac))[sample(length(start_lac),15)]){
lines( ksmooth(1:(start_lac[index+1]-start_lac[index]), milk[start_lac[index]:(start_lac[index+1]-1),7], bandwidth = 10), lwd=2,col = milk[start_lac[index],4])
}
milk_date = matrix(0, nrow= nrow(milk), ncol = 2)
fill1 = rep("", nrow(milk))
fill1[nchar(milk[,3])==1] = 0
fill2 = rep("", nrow(milk))
fill2[nchar(milk[,4])==1] = 0
temp = paste0(milk[,2], "-", fill1,  milk[,3], "-", fill2, milk[,4])
for(index in 1:nrow(weather)){
print(index)
set = which(temp == weather[index,3])
if(length(set)>0){
milk_date[set,1] = weather[index,17]
milk_date[set,2] = weather[index,20]
}
}
plot(0,0 , xlim = c(0, max(diff(start_lac))), ylim = c(0, max(milk[,7])))
for(index in (1:length(start_lac))[sample(length(start_lac),15)]){
lines( ksmooth(milk_date[start_lac[index],2]:(milk_date[start_lac[index],2] + start_lac[index+1] - start_lac[index] + 1), milk[start_lac[index]:(start_lac[index+1]-1),7], bandwidth = 10), lwd=2,col = milk[start_lac[index],4])
}
head(weather)
plot(weather[weather[,17]=="2020",10])
which(weather[weather[,17]=="2020",10] > 78)
plot(0,0 , xlim = c(0, 365), ylim = c(0, max(milk[,7])))
abline(v = 224)
for(index in (1:length(start_lac))[milk_date[start_lac,1] =="2020"][1:30]){
lines( ksmooth(milk_date[start_lac[index],2]:(milk_date[start_lac[index],2] +
start_lac[index+1] - start_lac[index] + 1),
milk[start_lac[index]:(start_lac[index+1]-1),7], bandwidth = 5), lwd=2,col = milk[start_lac[index],8])
}
par(mfrow = c(1,1))
plot(0,0, xlim = c(100,500), ylim = c(0,1000))
for(index in aa[1:50]){
points( ksmooth(milk_date[start_lac[index],2]:(milk_date[start_lac[index],2] + start_lac[index+1] - start_lac[index] + 1),
+                milk[start_lac[index]:(start_lac[index+1]-1),7], bandwidth = 0.01,
x.points = milk_date[start_lac[index],2]:(milk_date[start_lac[index],2] + start_lac[index+1] - start_lac[index] + 1)), lwd=2,col = milk[start_lac[index],8],
xlim = c(100,500))
}
dd = unique(milk_date)
dd = dd[sort(dd[,1] * 1000 + dd[,2], index.return = TRUE)$ix,]
avg_yield = numeric(nrow(dd))
n_record = numeric(nrow(dd))
n_record0 = numeric(nrow(dd))
year_temp = dd[1,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(1)
for(index in 1:nrow(dd)){
print(index)
if(dd[index,1] != year_temp){
year_temp = dd[index,1]
milk_temp = milk[milk[,2]== year_temp,]
year_thres = c(year_thres, index)
}
activ = milk_temp[,2] == dd[index,1] & milk_temp[,5] == dd[index,2]
avg_yield[index] = mean(milk_temp[activ,7])
n_record[index] = sum(activ)
n_record0[index] = mean(milk_temp[activ,7]==0)
}
plot(avg_yield)
plot(n_record)
points(n_record0 * n_record, col = "red")
plot(avg_yield)
plot(n_record)
points(n_record0 * n_record, col = "red")
abline(v = year_thres)
start_lac = c(start_lac, nrow(milk) + 1)
low_performance = rep(NA, nrow(milk))
for(index in (1:(length(start_lac)-1))){
milk_day = (1:(start_lac[index+1]-start_lac[index]))
milk_yield = (milk[start_lac[index]:(start_lac[index+1]-1),7])
considered = intersect(11:(length(milk_day)*0.9), which(milk_yield>0 ))
milk_current = ksmooth(milk_day[considered], milk_yield[considered], bandwidth = 3,
x.points = considered)
milk_smooth = ksmooth(milk_day[considered], milk_yield[considered], bandwidth = 25,
x.points = considered)
#plot(milk_current, type = "l", lty = 2)
#lines(milk_smooth, col = 2)
#plot((milk_current$y - milk_smooth$y) / milk_current$y)
stress_event = ((milk_current$y - milk_smooth$y) / milk_current$y) < (-0.1)
#points(milk_current, col = stress_event*2)
print(mean(stress_event))
low_performance[start_lac[index]:(start_lac[index+1]-1)][considered] = stress_event
}
for(year1 in unique(milk_date[,1])){
png(file = paste0(year1, "_stress.png"), width = 2000, height = 3000, res = 300)
keep = (milk_date[,1]==year1) & !is.na(low_performance)
stress = ksmooth(milk_date[,2][keep], low_performance[keep],
bandwidth = 0.001,
x.points = 1:365)
stress2 = ksmooth(milk_date[,2][keep], low_performance[keep],
bandwidth = 5,
x.points = 1:365)
par(mfrow = c(2,1))
plot(stress, main = "Low Milk yield (daily)",
xlab = "day in year",
ylab = "share under stress")
lines(stress2, type = "l", main = "Low Milk yield (weekly)",
xlab = "day in year",
ylab = "share under stress",
col = 2, lwd=2)
plot(weather[weather[,17]==year1,10], main = "Weather Info", ylim = c(0,90),
xlab = "day in year", ylab = "")
points(weather[weather[,17]==year1,9],
col = "red")
points(weather[weather[,17]==year1,16],
col = "blue")
points(weather[weather[,17]==year1,6],
col = "darkgreen")
legend("topleft",
c("THI_max", "THI_avg", "THI_recovery", "Temp_max"),
col = c(1,"red", "blue", "darkgreen"),
lty = 1, lwd=2)
dev.off()
}
